<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAP0SURBVGhD3ZbZUlNBEIZPlc/ga/golg/gPeWFVVb5ACo7gQAGAgiUIKIihiUCimwmYQ3KJkSW
        uIUliRDCet/mb5xTJ9ig3NFefKnT//TMmZ7p7hPr6Pj4v0AUNSKKGhFFjYiiRkRRI6KoEVHUiChqRBQ1
        IooaEUWNiKJGRFEjoqgRUdSIKGpEFDWSZXz7/oN6evrI662j4qJScpW4qbHhMQ0NjVDy509y+l427IeR
        kQDl5RbS/Xt5Ip6HXkqn9y5tMPwzODicten6R4302t9LnZ3dVOWpYa2o0EXbOzuXN5DV1TXKfVDAm8WN
        hMMfsja7t79P3zMpt7gYITw7xwwHh4c8dnh0RKndXYIt+eFG44kk7abTf4xj3v7Bga2btYyd3tvjdfEe
        53z4AKvD12XfxPDwe3ED5zE2NkHVVTXU3NTC9VRYUEK1tfUUiXy218LL+/sHqKy0gvLzisjlclNv7xve
        FDbX3u7jG19di/Kc9Y1NzgrU6nYmC7q6/OQuq6Du7te8RkF+Eb186cscSoIPHnuwkPsIAsV90YLGqXmr
        a+2DqCj38DpmPZw+/Fpbn9s+TlqetNJWPG7PWVlZZf/Z2Xm23WWV9CMWs8cBDgl7xtjSUoSiX77yoVnG
        CbVwVkoYAssLlPO0mlrGh2w/nAjm40ZgY1Hz0unpj7Sw8Mm2BwaGKLa+QYFgiB7cz2cmJ8NU6irncTuQ
        uZNAyt2VFIut24HgVjGOfZo0xGECq7Kyip1w3ds7KXuDp1nZWqerd2+SlXOdaR47WRTXi/k+XyfbeLGp
        OaQq2jme29ras9ZGzSEo3AhSBT5/C2R5eeXM/VnINTiB0dHxMx1758J2EOBOWz377qRSvHETCFLBBILv
        j6lBdEbneoasQDKNB9rpQFA/sNGYTs83WJHPy+wEMAGpIDkmd1N0Lfc2B3Hl1g3yz0ywXzT6hed2dHSx
        7QwE36ZAIMjPHo/XvnF0HdQNgl/LFHhJcRn7YC8Yn5mZY/tCgeAHHQSOAJtoffqc0wI6XmbabjS+QY2h
        d4RaMQu8etXJ8/DNge0MBLeQSCbtjSAYdJ6aTDeCjZtAsdbVNbD97NkLwsE0ZeoN9unUMqknwT8olr6+
        t+ws4ff3iAug4B7+rjEpEFOcuGVn5wFo0+hOGEfBO8fMmuhM/1wjTgOOqBkshMn4r4VejiDNrTjBASCf
        UVtIEWhIm3B4mns7/rsZ3614gkKhMb5ldK2Nzc2s9fANQRrOzS9kGkCCgqFRmpqa5o/dxOQUBYOj534e
        RFEjoqgRUdSIKGpEFDUiihoRRY2IokZEUSOiqBFR1IgoakQUNSKKGhFFjYiiRkRRI6KoEVHUx7H1CwCy
        H3vaI8YiAAAAAElFTkSuQmCC
</value>
  </data>
</root>